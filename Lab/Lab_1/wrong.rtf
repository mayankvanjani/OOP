{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
  Conway's Game of Life Lab\
  Mayank Vanjani\
  CS2114\
  NYU Tandon School of Engineering\
\
*/\
\
#include <iostream>\
#include <fstream>\
#include <string>\
#include <vector>\
using namespace std;\
\
/*\
void print_board(vector< vector<char> > board) \{\
  for (size_t i = 0; i < rows; ++i) \{\
    for (size_t j = 0; j < cols; ++j) \{\
      cout << board[i][j];\
    \}\
    cout << endl;\
  \}  \
\}\
  \
vector <string> make_board(string filename) \{  \
  ifstream somefileStream(filename);\
  if (!somefileStream) \{\
    cerr << "failed to open\\n";\
    exit(1);\
  \}\
  \
  vector<string> board;\
  string line;\
  bool test = true;\
  int line_num = 0;\
\
  while(getline(somefileStream, line)) \{\
    if (test)\
    for (size_t index = 0; index < line.size(); ++index) \{\
      board[line_num].push_back(line[index]);\
      //cout << index << endl;\
    \}\
    line_num++;\
  \}\
  return board;\
\}\
*/\
\
}